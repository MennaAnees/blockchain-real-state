{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "paused",
          "type": "bool"
        }
      ],
      "name": "setter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "contractOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "addSolutionEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "pausedEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnerShip",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        },
        {
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addSolution",
      "outputs": [
        {
          "name": "arraylength",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"paused\",\"type\":\"bool\"}],\"name\":\"setter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addSolution\",\"outputs\":[{\"name\":\"arraylength\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"contractOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"addSolutionEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"pausedEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnerShip\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/meem/ethereum/nanodegree/projects/blockchain-real-state/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/meem/ethereum/nanodegree/projects/blockchain-real-state/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x3c01791b73a0789528fdac898b62ef4a1f6fea6ee0a903affc1ac15fb544c1f2\",\"urls\":[\"bzzr://ad8e7d55c0c8e7868ac443f6d55b92ad9648931738253da96f3c6d2c6b6715a2\"]},\"/home/meem/ethereum/nanodegree/projects/blockchain-real-state/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0xe5ebe286b4624095629f76c6ac8dbad3cb305fbdb43fff09e4eebed35a05b49c\",\"urls\":[\"bzzr://f48ebdff8df1cabbd7749c5eb818a6c54a6ba92956a850736bdcfbc9f53f9ffd\"]},\"/home/meem/ethereum/nanodegree/projects/blockchain-real-state/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0xe77c737378058704d17ce44b71c4347c0f1f634676b47cd8cc9a1b41b1d60061\",\"urls\":[\"bzzr://2208f0fb7e3efdf1184cb010126c04ecd688fd247142f1c56d19dca7141c2f42\"]},\"/home/meem/ethereum/nanodegree/projects/blockchain-real-state/zokrates/code/square/verifier.sol\":{\"keccak256\":\"0x512fd9388196a96ecf3a6f72af0c0a4a44e53c8a3758bb9fec7b9df179600b2f\",\"urls\":[\"bzzr://166d2df212699bbc5a0c09d3246dc4251aaa0fd2a7f20808a32c1412c087c3af\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xd8df7ffce6025f785967601ee94f79dae747b39917a9afbbb6fa299fe704065c\",\"urls\":[\"bzzr://8157b56cfb7905faec05ecf4cb2ae474c256ab5736598aaf322ca957383ff5ea\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610133576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630159ead91461013857806301ffc9a71461017557806306fdde03146101e7578063081812fc14610277578063095ea7b3146102f257806318160ddd1461034d57806323b872dd1461037857806327dc297e146103f35780632f745c59146104c557806338bbfa501461053457806340c10f191461069d57806342842e0e146107105780634f6ccce71461078b5780636352211e146107da57806370a082311461085557806395d89b41146108ba578063a22cb4651461094a578063b88d4fde146109a7578063c87b56dd14610ab9578063ccd0ef6914610b6d578063ce606ee014610bdc578063e985e9c514610c33578063f2fde38b14610cbc575b600080fd5b34801561014457600080fd5b506101736004803603602081101561015b57600080fd5b81019080803515159060200190929190505050610d0d565b005b34801561018157600080fd5b506101cd6004803603602081101561019857600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610e51565b604051808215151515815260200191505060405180910390f35b3480156101f357600080fd5b506101fc610eb9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561023c578082015181840152602081019050610221565b50505050905090810190601f1680156102695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561028357600080fd5b506102b06004803603602081101561029a57600080fd5b8101908080359060200190929190505050610f5b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102fe57600080fd5b5061034b6004803603604081101561031557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611015565b005b34801561035957600080fd5b5061036261125a565b6040518082815260200191505060405180910390f35b34801561038457600080fd5b506103f16004803603606081101561039b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611267565b005b3480156103ff57600080fd5b506104c36004803603604081101561041657600080fd5b81019080803590602001909291908035906020019064010000000081111561043d57600080fd5b82018360208201111561044f57600080fd5b8035906020019184600183028401116401000000008311171561047157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061128c565b005b3480156104d157600080fd5b5061051e600480360360408110156104e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112cf565b6040518082815260200191505060405180910390f35b34801561054057600080fd5b5061069b6004803603606081101561055757600080fd5b81019080803590602001909291908035906020019064010000000081111561057e57600080fd5b82018360208201111561059057600080fd5b803590602001918460018302840111640100000000831117156105b257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561061557600080fd5b82018360208201111561062757600080fd5b8035906020019184600183028401116401000000008311171561064957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611346565b005b3480156106a957600080fd5b506106f6600480360360408110156106c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061134b565b604051808215151515815260200191505060405180910390f35b34801561071c57600080fd5b506107896004803603606081101561073357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061142a565b005b34801561079757600080fd5b506107c4600480360360208110156107ae57600080fd5b810190808035906020019092919050505061144b565b6040518082815260200191505060405180910390f35b3480156107e657600080fd5b50610813600480360360208110156107fd57600080fd5b8101908080359060200190929190505050611483565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561086157600080fd5b506108a46004803603602081101561087857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114c0565b6040518082815260200191505060405180910390f35b3480156108c657600080fd5b506108cf611510565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561090f5780820151818401526020810190506108f4565b50505050905090810190601f16801561093c5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561095657600080fd5b506109a56004803603604081101561096d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506115b2565b005b3480156109b357600080fd5b50610ab7600480360360808110156109ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610a3157600080fd5b820183602082011115610a4357600080fd5b80359060200191846001830284011164010000000083111715610a6557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506116ee565b005b348015610ac557600080fd5b50610af260048036036020811015610adc57600080fd5b8101908080359060200190929190505050611716565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b32578082015181840152602081019050610b17565b50505050905090810190601f168015610b5f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b7957600080fd5b50610bc660048036036040811015610b9057600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506117df565b6040518082815260200191505060405180910390f35b348015610be857600080fd5b50610bf1611927565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c3f57600080fd5b50610ca260048036036040811015610c5657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119f9565b604051808215151515815260200191505060405180910390f35b348015610cc857600080fd5b50610d0b60048036036020811015610cdf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a8d565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610dd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b80600060146101000a81548160ff0219169083151502179055507f406f9823202d7ce82580ab30982102ad1c40d3a7b0e08848d07cd7afa59e42ba33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f515780601f10610f2657610100808354040283529160200191610f51565b820191906000526020600020905b815481529060010190602001808311610f3457829003601f168201915b5050505050905090565b6000610f6682611d17565b1515610fda576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f546f6b656e206973206e6f7420617070726f766564207965740000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061102082611483565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156110c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f596f7520616c7265616479206f776e207468697320746f6b656e00000000000081525060200191505060405180910390fd5b6110cf82611483565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061110e575061110d81336119f9565b5b15156111a8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001807f596f7520617265206e6f7420746865206f776e6572206f66207468697320636f81526020017f6e7472616374000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b6112713382611d89565b151561127c57600080fd5b611287838383611e1e565b505050565b6112cb828260006040519080825280601f01601f1916602001820160405280156112c55781602001600182028038833980820191505090505b50611346565b5050565b60006112da836114c0565b821015156112e757600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110151561133357fe5b9060005260206000200154905092915050565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611411576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b61141b8383611e42565b61142482611e63565b92915050565b61144683838360206040519081016040528060008152506116ee565b505050565b600061145561125a565b8210151561146257600080fd5b60088281548110151561147157fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611509600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611fb6565b9050919050565b606060108054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115a85780601f1061157d576101008083540402835291602001916115a8565b820191906000526020600020905b81548152906001019060200180831161158b57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156115ed57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b6116f9848484611267565b61170584848484611fc4565b151561171057600080fd5b50505050565b606061172182611d17565b151561172c57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156117d35780601f106117a8576101008083540402835291602001916117d3565b820191906000526020600020905b8154815290600101906020018083116117b657829003601f168201915b50505050509050919050565b60006117e9613185565b8381600001818152505082816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050601381908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050507f759017d41dad50cfdc38c105387404dbbd9158552ee4a3b88e413a6b63bec5068385604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a160138054905091505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156119ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b60003390508091505090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611b51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611c1c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f276163636f756e7427206d75737420626520612076616c69642061646472657381526020017f732e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b7f5b94a5f1a151b859c1d5794b3740dff40527ffc8d12281797c100d36bcfd13216000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600080611d9583611483565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611e0457508373ffffffffffffffffffffffffffffffffffffffff16611dec84610f5b565b73ffffffffffffffffffffffffffffffffffffffff16145b80611e155750611e1481856119f9565b5b91505092915050565b611e298383836121e7565b611e3383826124a6565b611e3d828261264a565b505050565b611e4c8282612711565b611e56828261264a565b611e5f8161292d565b5050565b611e6c81611d17565b1515611ee0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f746f6b656e4964206e6f7420666f756e6400000000000000000000000000000081525060200191505060405180910390fd5b611f8c60118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f795780601f10611f4e57610100808354040283529160200191611f79565b820191906000526020600020905b815481529060010190602001808311611f5c57829003601f168201915b5050505050611f8783612979565b612ad2565b601260008381526020019081526020016000209080519060200190611fb29291906131b5565b5050565b600081600001549050919050565b6000611fe58473ffffffffffffffffffffffffffffffffffffffff16612b19565b1515611ff457600190506121df565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156120eb5780820151818401526020810190506120d0565b50505050905090810190601f1680156121185780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561213a57600080fd5b505af115801561214e573d6000803e3d6000fd5b505050506040513d602081101561216457600080fd5b8101908080519060200190929190505050905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6121f081611483565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415156122b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f4661696c20746f207472616e736665722c20596f7520646f6e6074206f776e2081526020017f7468697320746f6b656e0000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561235d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f27746f272069736e607420612076616c6964206164647265737300000000000081525060200191505060405180910390fd5b61236681612b65565b6123ad600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612c25565b6123f4600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612c48565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006124fe6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612c5e90919063ffffffff16565b905060006007600084815260200190815260200160002054905081811415156125f1576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151561256f57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811015156125c957fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036126439190613235565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156127b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f27746f27206973206e6f7420612076616c69642061646472657373000000000081525060200191505060405180910390fd5b6127bf81611d17565b151515612834576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f746f6b656e20616c7265616479206d696e74656400000000000000000000000081525060200191505060405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506128cd600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612c48565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156129c1576040805190810160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050612acd565b600082905060005b6000821415156129ef578080600101915050600a828115156129e757fe5b0491506129c9565b6060816040519080825280601f01601f191660200182016040528015612a245781602001600182028038833980820191505090505b50905060006001830390505b600086141515612ac557600a86811515612a4657fe5b066030017f010000000000000000000000000000000000000000000000000000000000000002828280600190039350815181101515612a8157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a86811515612abd57fe5b049550612a30565b819450505050505b919050565b6060612b118383602060405190810160405280600081525060206040519081016040528060008152506020604051908101604052806000815250612ca8565b905092915050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706001029050833f9150808214158015612b5c575060006001028214155b92505050919050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612c225760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b612c3d60018260000154612c5e90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000612ca083836040805190810160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506130c3565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015612d045781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612dce578881815181101515612d3257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612d9157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612d1b565b600090505b8751811015612e86578781815181101515612dea57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612e4957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612dd3565b600090505b8651811015612f3e578681815181101515612ea257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612f0157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612e8b565b600090505b8551811015612ff6578581815181101515612f5a57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515612fb957fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612f43565b600090505b84518110156130ae57848181518110151561301257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561307157fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612ffb565b82995050505050505050505095945050505050565b60008383111582901515613172576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561313757808201518184015260208101905061311c565b50505050905090810190601f1680156131645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604080519081016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106131f657805160ff1916838001178555613224565b82800160010185558215613224579182015b82811115613223578251825591602001919060010190613208565b5b5090506132319190613261565b5090565b81548183558181111561325c5781836000526020600020918201910161325b9190613261565b5b505050565b61328391905b8082111561327f576000816000905550600101613267565b5090565b9056fea165627a7a72305820f525f7d37fe129e16658b63e77d87e537b49a0848654d9db5fc1b871187ea9120029",
  "sourceMap": "841:840:3:-;;;20540:312:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1033:10;1024:6;;:19;;;;;;;;;;;;;;;;;;1058:37;1076:6;;;;;;;;;;;1084:10;1058:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:5;2267:7;;:15;;;;;;;;;;;;;;;;;;2297:23;2309:10;2297:23;;;;;;;;;;;;;;;;;;;;;;3043:40;2641:10;3062:20;;3043:18;;;:40;;;:::i;:::-;5296;5171:10;5315:20;;5296:18;;;:40;;;:::i;:::-;13182:51;12789:10;13201:31;;13182:18;;;:51;;;:::i;:::-;20718:4;20710:5;:12;;;;;;;;;;;;:::i;:::-;;20742:6;20732:7;:16;;;;;;;;;;;;:::i;:::-;;20774:12;20758:13;:28;;;;;;;;;;;;:::i;:::-;;20796:49;20352:10;20815:29;;20796:18;;;:49;;;:::i;:::-;20540:312;;;841:840:3;;3421:158:0;3511:10;3496:25;;:11;:25;;;;;3488:34;;;;;;;;3568:4;3532:20;:33;3553:11;3532:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3421:158;:::o;841:840:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "841:840:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2112:117:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2112:117:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2112:117:0;;;;;;;;;;;;;;;;;;;;;;3181:161;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3181:161:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3181:161:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20939:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20939:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;20939:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6583:231;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6583:231:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6583:231:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5879:698;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5879:698:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5879:698:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13975:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13975:94:0;;;;;;;;;;;;;;;;;;;;;;;7819:179;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7819:179:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7819:179:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14801:122:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14801:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14801:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14801:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14801:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14801:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14801:122:2;;;;;;;;;;;;;;;;;;13613:210:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13613:210:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13613:210:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14929:166:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14929:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14929:166:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;14929:166:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;14929:166:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;14929:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;14929:166:2;;;;;;;;;;;;;;;;;;22713:140:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22713:140:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;22713:140:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8004:144;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8004:144:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8004:144:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14406:148;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14406:148:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14406:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5640:162;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5640:162:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5640:162:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5349:285;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5349:285:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5349:285:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21028:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21028:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21028:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7106:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7106:213:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7106:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8154:249;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8154:249:0;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8154:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8154:249:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8154:249:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8154:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8154:249:0;;;;;;;;;;;;;;;;;;21121:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21121:151:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21121:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21121:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1104:308:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1104:308:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1104:308:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22859:125:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22859:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;7640:173;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7640:173:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7640:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1222:363;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1222:363:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1222:363:0;;;;;;;;;;;;;;;;;;;;;;2112:117;1160:6;;;;;;;;;;;1146:20;;:10;:20;;;1138:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2178:6;2168:7;;:16;;;;;;;;;;;;;;;;;;2199:23;2211:10;2199:23;;;;;;;;;;;;;;;;;;;;;;2112:117;:::o;3181:161::-;3275:4;3302:20;:33;3323:11;3302:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3295:40;;3181:161;;;:::o;20939:83::-;20978:13;21010:5;21003:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20939:83;:::o;6583:231::-;6642:7;6720:16;6728:7;6720;:16::i;:::-;6712:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6783:15;:24;6799:7;6783:24;;;;;;;;;;;;;;;;;;;;;6776:31;;6583:231;;;:::o;5879:698::-;6211:13;6227:16;6235:7;6227;:16::i;:::-;6211:32;;6267:5;6261:11;;:2;:11;;;;6253:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6348:16;6356:7;6348;:16::i;:::-;6334:30;;:10;:30;;;:85;;;;6384:35;6401:5;6408:10;6384:16;:35::i;:::-;6334:85;6313:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6520:2;6493:15;:24;6509:7;6493:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6562:7;6558:2;6537:33;;6546:10;6537:33;;;;;;;;;;;;5879:698;;;:::o;13975:94::-;14019:7;14045:10;:17;;;;14038:24;;13975:94;:::o;7819:179::-;7909:39;7928:10;7940:7;7909:18;:39::i;:::-;7901:48;;;;;;;;7959:32;7973:4;7979:2;7983:7;7959:13;:32::i;:::-;7819:179;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;13613:210:0:-;13717:7;13756:16;13766:5;13756:9;:16::i;:::-;13748:5;:24;13740:33;;;;;;;;13790:12;:19;13803:5;13790:19;;;;;;;;;;;;;;;13810:5;13790:26;;;;;;;;;;;;;;;;;;13783:33;;13613:210;;;;:::o;14929:166:2:-;;;;:::o;22713:140:0:-;22782:4;1160:6;;;;;;;;;;;1146:20;;:10;:20;;;1138:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22798:18;22804:2;22808:7;22798:5;:18::i;:::-;22826:20;22838:7;22826:11;:20::i;:::-;22713:140;;;;:::o;8004:144::-;8102:39;8119:4;8125:2;8129:7;8102:39;;;;;;;;;;;;;:16;:39::i;:::-;8004:144;;;:::o;14406:148::-;14464:7;14499:13;:11;:13::i;:::-;14491:5;:21;14483:30;;;;;;;;14530:10;14541:5;14530:17;;;;;;;;;;;;;;;;;;14523:24;;14406:148;;;:::o;5640:162::-;5695:7;5775:11;:20;5787:7;5775:20;;;;;;;;;;;;;;;;;;;;;5768:27;;5640:162;;;:::o;5349:285::-;5404:7;5593:34;:17;:24;5611:5;5593:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5586:41;;5349:285;;;:::o;21028:87::-;21069:13;21101:7;21094:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21028:87;:::o;7106:213::-;7191:10;7185:16;;:2;:16;;;;7177:25;;;;;;;;7249:8;7212:18;:30;7231:10;7212:30;;;;;;;;;;;;;;;:34;7243:2;7212:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7299:2;7272:40;;7287:10;7272:40;;;7303:8;7272:40;;;;;;;;;;;;;;;;;;;;;;7106:213;;:::o;8154:249::-;8298:31;8311:4;8317:2;8321:7;8298:12;:31::i;:::-;8347:48;8370:4;8376:2;8380:7;8389:5;8347:22;:48::i;:::-;8339:57;;;;;;;;8154:249;;;;:::o;21121:151::-;21179:13;21212:16;21220:7;21212;:16::i;:::-;21204:25;;;;;;;;21246:10;:19;21257:7;21246:19;;;;;;;;;;;21239:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21121:151;;;:::o;1104:308:3:-;1169:16;1196:27;;:::i;:::-;1253:5;1233:11;:17;;:25;;;;;1287:4;1268:11;:16;;:23;;;;;;;;;;;1301:9;1316:11;1301:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1301:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:29;1360:4;1366:5;1343:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;1389:9;:16;;;;1382:23;;;1104:308;;;;:::o;22859:125:0:-;22910:7;1160:6;;;;;;;;;;;1146:20;;:10;:20;;;1138:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22929:13;22945:10;22929:26;;22972:5;22965:12;;;22859:125;:::o;7640:173::-;7744:4;7771:18;:25;7790:5;7771:25;;;;;;;;;;;;;;;:35;7797:8;7771:35;;;;;;;;;;;;;;;;;;;;;;;;;7764:42;;7640:173;;;;:::o;1222:363::-;1160:6;;;;;;;;;;;1146:20;;:10;:20;;;1138:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1460:1;1440:22;;:8;:22;;;;1432:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1516:35;1534:6;;;;;;;;;;;1542:8;1516:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:8;1561:6;;:17;;;;;;;;;;;;;;;;;;1222:363;:::o;8597:152::-;8654:4;8670:13;8686:11;:20;8698:7;8686:20;;;;;;;;;;;;;;;;;;;;;8670:36;;8740:1;8723:19;;:5;:19;;;;8716:26;;;8597:152;;;:::o;9109:298::-;9218:4;9238:13;9254:16;9262:7;9254;:16::i;:::-;9238:32;;9299:5;9288:16;;:7;:16;;;:63;;;;9344:7;9320:31;;:20;9332:7;9320:11;:20::i;:::-;:31;;;9288:63;:111;;;;9367:32;9384:5;9391:7;9367:16;:32::i;:::-;9288:111;9280:120;;;9109:298;;;;:::o;14929:239::-;15014:38;15034:4;15040:2;15044:7;15014:19;:38::i;:::-;15063:47;15096:4;15102:7;15063:32;:47::i;:::-;15121:40;15149:2;15153:7;15121:27;:40::i;:::-;14929:239;;;:::o;15423:196::-;15486:24;15498:2;15502:7;15486:11;:24::i;:::-;15521:40;15549:2;15553:7;15521:27;:40::i;:::-;15572;15604:7;15572:31;:40::i;:::-;15423:196;;:::o;21744:185::-;21809:16;21817:7;21809;:16::i;:::-;21801:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21879:43;21889:13;21879:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21904:17;21913:7;21904:8;:17::i;:::-;21879:9;:43::i;:::-;21857:10;:19;21868:7;21857:19;;;;;;;;;;;:65;;;;;;;;;;;;:::i;:::-;;21744:185;:::o;1065:112:6:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11550:431:0:-;11701:4;11722:15;:2;:13;;;:15::i;:::-;11721:16;11717:58;;;11760:4;11753:11;;;;11717:58;11785:13;11817:2;11801:36;;;11851:10;11875:4;11893:7;11914:5;11801:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11801:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11801:128:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11801:128:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11801:128:0;;;;;;;;;;;;;;;;11785:144;;4309:10;11957:16;;11947:26;;;:6;:26;;;;11939:35;;;11550:431;;;;;;;:::o;10272:750::-;10666:16;10674:7;10666;:16::i;:::-;10658:24;;:4;:24;;;10637:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10782:1;10768:16;;:2;:16;;;;10760:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10825:23;10840:7;10825:14;:23::i;:::-;10858:35;:17;:23;10876:4;10858:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10903:33;:17;:21;10921:2;10903:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10970:2;10947:11;:20;10959:7;10947:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11007:7;11003:2;10988:27;;10997:4;10988:27;;;;;;;;;;;;10272:750;;;:::o;17423:1141::-;17697:22;17722:32;17752:1;17722:12;:18;17735:4;17722:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17697:57;;17764:18;17785:17;:26;17803:7;17785:26;;;;;;;;;;;;17764:47;;17929:14;17915:10;:28;;17911:323;;;17959:19;17981:12;:18;17994:4;17981:18;;;;;;;;;;;;;;;18000:14;17981:34;;;;;;;;;;;;;;;;;;17959:56;;18063:11;18030:12;:18;18043:4;18030:18;;;;;;;;;;;;;;;18049:10;18030:30;;;;;;;;;;;;;;;;;:44;;;;18179:10;18146:17;:30;18164:11;18146:30;;;;;;;;;;;:43;;;;17911:323;;18320:12;:18;18333:4;18320:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17423:1141;;;;:::o;16269:183::-;16382:12;:16;16395:2;16382:16;;;;;;;;;;;;;;;:23;;;;16353:17;:26;16371:7;16353:26;;;;;;;;;;;:52;;;;16415:12;:16;16428:2;16415:16;;;;;;;;;;;;;;;16437:7;16415:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16415:30:0;;;;;;;;;;;;;;;;;;;;;;16269:183;;:::o;9564:509::-;9846:1;9832:16;;:2;:16;;;;9824:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9899:16;9907:7;9899;:16::i;:::-;9898:17;9890:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9973:2;9950:11;:20;9962:7;9950:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9985:33;:17;:21;10003:2;9985:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10058:7;10054:2;10033:33;;10050:1;10033:33;;;;;;;;;;;;9564:509;;:::o;16647:161::-;16750:10;:17;;;;16723:15;:24;16739:7;16723:24;;;;;;;;;;;:44;;;;16777:10;16793:7;16777:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16777:24:0;;;;;;;;;;;;;;;;;;;;;;16647:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;;43456:66;;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;;43601:100;;;43664:2;43659;:7;;;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;686:610:9:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;12062:171:0:-;12161:1;12125:38;;:15;:24;12141:7;12125:24;;;;;;;;;;;;;;;;;;;;;:38;;;;12121:106;;;12214:1;12179:15;:24;12195:7;12179:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12121:106;12062:171;:::o;1367:108:6:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:7:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;1732:187:7:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;841:840:3:-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "\npragma solidity ^0.5.0;\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\nimport \"../../zokrates/code/square/verifier.sol\";\nimport \"./ERC721Mintable.sol\";\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n// TODO define a solutions struct that can hold an index & an address\n\n// TODO define an array of the above struct\n\n// TODO define a mapping to store unique solutions submitted\n\n// TODO Create an event to emit when a solution is added\n\n// TODO Create a function to add the solutions to the array and emit the event\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\ncontract SolnSquareVerifier is CustomERC721Token {\n    struct Solution{\n        uint256 index;\n        address addr;\n    }\n\n    Solution[] solutions;\n    mapping(bool=> Solution) submittedSolutions;\n    event addSolutionEvent(address caller, uint256 index);\n\n    function addSolution(uint256 index, address addr) public returns(uint arraylength){\n        Solution memory newSolution;\n        newSolution.index = index;\n        newSolution.addr = addr;\n        solutions.push(newSolution);\n        emit addSolutionEvent(addr, index);\n        return solutions.length;\n    }\n\n    // function mintToken(address to, uint256 tokenId, Solution memory solution) public{\n    //     require(submittedSolutions[solution] != true, \"solution is submitted before\");\n    //     mint(to, tokenId);\n    //     submittedSolutions[true] = solution;\n    // }\n}",
  "sourcePath": "/home/meem/ethereum/nanodegree/projects/blockchain-real-state/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/home/meem/ethereum/nanodegree/projects/blockchain-real-state/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7499
      ]
    },
    "id": 7500,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7437,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:23:3"
      },
      {
        "absolutePath": "/home/meem/ethereum/nanodegree/projects/blockchain-real-state/zokrates/code/square/verifier.sol",
        "file": "../../zokrates/code/square/verifier.sol",
        "id": 7438,
        "nodeType": "ImportDirective",
        "scope": 7500,
        "sourceUnit": 12618,
        "src": "133:49:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/meem/ethereum/nanodegree/projects/blockchain-real-state/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7439,
        "nodeType": "ImportDirective",
        "scope": 7500,
        "sourceUnit": 1111,
        "src": "183:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7440,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1110,
              "src": "872:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1110",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7441,
            "nodeType": "InheritanceSpecifier",
            "src": "872:17:3"
          }
        ],
        "contractDependencies": [
          126,
          966,
          668,
          1110,
          1068,
          68,
          172,
          7435
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7499,
        "linearizedBaseContracts": [
          7499,
          1110,
          1068,
          7435,
          966,
          668,
          172,
          126,
          68
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7446,
            "members": [
              {
                "constant": false,
                "id": 7443,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7446,
                "src": "921:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7442,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "921:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7445,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 7446,
                "src": "944:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7444,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "944:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7499,
            "src": "896:67:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7449,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7499,
            "src": "969:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7446_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7447,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7446,
                "src": "969:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7446_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7448,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "969:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7446_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7453,
            "name": "submittedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7499,
            "src": "995:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bool_$_t_struct$_Solution_$7446_storage_$",
              "typeString": "mapping(bool => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7452,
              "keyType": {
                "id": 7450,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1003:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              },
              "nodeType": "Mapping",
              "src": "995:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bool_$_t_struct$_Solution_$7446_storage_$",
                "typeString": "mapping(bool => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7451,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7446,
                "src": "1010:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7446_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7459,
            "name": "addSolutionEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7455,
                  "indexed": false,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 7459,
                  "src": "1067:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7457,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7459,
                  "src": "1083:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1066:31:3"
            },
            "src": "1044:54:3"
          },
          {
            "body": {
              "id": 7497,
              "nodeType": "Block",
              "src": "1186:226:3",
              "statements": [
                {
                  "assignments": [
                    7469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7469,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7497,
                      "src": "1196:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7446_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7468,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7446,
                        "src": "1196:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7446_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7470,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1196:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7471,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "1233:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7446_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      },
                      "id": 7473,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7443,
                      "src": "1233:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7474,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7461,
                      "src": "1253:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1233:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7476,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7477,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "1268:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7446_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      },
                      "id": 7479,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "addr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7445,
                      "src": "1268:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7480,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7463,
                      "src": "1287:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1268:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7482,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7486,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "1316:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7446_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7446_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7483,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7449,
                        "src": "1301:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7446_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1301:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7446_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7488,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:27:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7490,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7463,
                        "src": "1360:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7491,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7461,
                        "src": "1366:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7489,
                      "name": "addSolutionEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7459,
                      "src": "1343:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7493,
                  "nodeType": "EmitStatement",
                  "src": "1338:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7494,
                      "name": "solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7449,
                      "src": "1389:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Solution_$7446_storage_$dyn_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                      }
                    },
                    "id": 7495,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1389:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7467,
                  "id": 7496,
                  "nodeType": "Return",
                  "src": "1382:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7461,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "1125:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7463,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "1140:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1124:29:3"
            },
            "returnParameters": {
              "id": 7467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7466,
                  "name": "arraylength",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "1169:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7465,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1168:18:3"
            },
            "scope": 7499,
            "src": "1104:308:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7500,
        "src": "841:840:3"
      }
    ],
    "src": "1:1680:3"
  },
  "legacyAST": {
    "absolutePath": "/home/meem/ethereum/nanodegree/projects/blockchain-real-state/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7499
      ]
    },
    "id": 7500,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7437,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1:23:3"
      },
      {
        "absolutePath": "/home/meem/ethereum/nanodegree/projects/blockchain-real-state/zokrates/code/square/verifier.sol",
        "file": "../../zokrates/code/square/verifier.sol",
        "id": 7438,
        "nodeType": "ImportDirective",
        "scope": 7500,
        "sourceUnit": 12618,
        "src": "133:49:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/meem/ethereum/nanodegree/projects/blockchain-real-state/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7439,
        "nodeType": "ImportDirective",
        "scope": 7500,
        "sourceUnit": 1111,
        "src": "183:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7440,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1110,
              "src": "872:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1110",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7441,
            "nodeType": "InheritanceSpecifier",
            "src": "872:17:3"
          }
        ],
        "contractDependencies": [
          126,
          966,
          668,
          1110,
          1068,
          68,
          172,
          7435
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7499,
        "linearizedBaseContracts": [
          7499,
          1110,
          1068,
          7435,
          966,
          668,
          172,
          126,
          68
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7446,
            "members": [
              {
                "constant": false,
                "id": 7443,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7446,
                "src": "921:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7442,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "921:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7445,
                "name": "addr",
                "nodeType": "VariableDeclaration",
                "scope": 7446,
                "src": "944:12:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7444,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "944:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7499,
            "src": "896:67:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7449,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7499,
            "src": "969:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7446_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7447,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7446,
                "src": "969:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7446_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7448,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "969:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7446_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7453,
            "name": "submittedSolutions",
            "nodeType": "VariableDeclaration",
            "scope": 7499,
            "src": "995:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bool_$_t_struct$_Solution_$7446_storage_$",
              "typeString": "mapping(bool => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7452,
              "keyType": {
                "id": 7450,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1003:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              },
              "nodeType": "Mapping",
              "src": "995:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bool_$_t_struct$_Solution_$7446_storage_$",
                "typeString": "mapping(bool => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7451,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7446,
                "src": "1010:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7446_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7459,
            "name": "addSolutionEvent",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7455,
                  "indexed": false,
                  "name": "caller",
                  "nodeType": "VariableDeclaration",
                  "scope": 7459,
                  "src": "1067:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1067:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7457,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7459,
                  "src": "1083:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1083:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1066:31:3"
            },
            "src": "1044:54:3"
          },
          {
            "body": {
              "id": 7497,
              "nodeType": "Block",
              "src": "1186:226:3",
              "statements": [
                {
                  "assignments": [
                    7469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7469,
                      "name": "newSolution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7497,
                      "src": "1196:27:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7446_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7468,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7446,
                        "src": "1196:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7446_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7470,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1196:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7471,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "1233:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7446_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      },
                      "id": 7473,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7443,
                      "src": "1233:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7474,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7461,
                      "src": "1253:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1233:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7476,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 7477,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "1268:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7446_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      },
                      "id": 7479,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "addr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7445,
                      "src": "1268:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7480,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7463,
                      "src": "1287:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1268:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 7482,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7486,
                        "name": "newSolution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7469,
                        "src": "1316:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7446_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7446_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7483,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7449,
                        "src": "1301:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7446_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1301:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7446_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7488,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:27:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7490,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7463,
                        "src": "1360:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7491,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7461,
                        "src": "1366:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7489,
                      "name": "addSolutionEvent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7459,
                      "src": "1343:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1343:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7493,
                  "nodeType": "EmitStatement",
                  "src": "1338:34:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 7494,
                      "name": "solutions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7449,
                      "src": "1389:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Solution_$7446_storage_$dyn_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                      }
                    },
                    "id": 7495,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "1389:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7467,
                  "id": 7496,
                  "nodeType": "Return",
                  "src": "1382:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7498,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7461,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "1125:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1125:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7463,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "1140:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1140:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1124:29:3"
            },
            "returnParameters": {
              "id": 7467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7466,
                  "name": "arraylength",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "1169:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7465,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1169:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1168:18:3"
            },
            "scope": 7499,
            "src": "1104:308:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7500,
        "src": "841:840:3"
      }
    ],
    "src": "1:1680:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2020-03-13T21:51:15.297Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}